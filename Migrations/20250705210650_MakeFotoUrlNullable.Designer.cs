// <auto-generated />
using System;
using Futebol_Semanal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Futebol_Semanal_API.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20250705210650_MakeFotoUrlNullable")]
    partial class MakeFotoUrlNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Futebol_Semanal.Models.Estatistica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Assistencias")
                        .HasColumnType("integer");

                    b.Property<int>("CartoesAmarelos")
                        .HasColumnType("integer");

                    b.Property<int>("CartoesVermelhos")
                        .HasColumnType("integer");

                    b.Property<int>("Faltas")
                        .HasColumnType("integer");

                    b.Property<int>("Gols")
                        .HasColumnType("integer");

                    b.Property<int>("JogadorId")
                        .HasColumnType("integer");

                    b.Property<int>("MinutosEmCampo")
                        .HasColumnType("integer");

                    b.Property<int>("PartidaId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("TimeId");

                    b.ToTable("Estatisticas");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NumeroCamisa")
                        .HasColumnType("integer");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("TimeId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Campeonato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CondicoesClimaticas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PlacarCasa")
                        .HasColumnType("integer");

                    b.Property<int>("PlacarVisitante")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCasaId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeVisitanteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimeCasaId");

                    b.HasIndex("TimeVisitanteId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CorUniforme")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Fundacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Estatistica", b =>
                {
                    b.HasOne("Futebol_Semanal.Models.Jogador", "Jogador")
                        .WithMany("Estatisticas")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Futebol_Semanal.Models.Partida", "Partida")
                        .WithMany("Estatisticas")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Futebol_Semanal.Models.Time", "Time")
                        .WithMany("Estatisticas")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Partida");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Jogador", b =>
                {
                    b.HasOne("Futebol_Semanal.Models.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Futebol_Semanal.Models.Usuario", "Usuario")
                        .WithMany("Jogadores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Partida", b =>
                {
                    b.HasOne("Futebol_Semanal.Models.Time", "TimeCasa")
                        .WithMany("PartidasCasa")
                        .HasForeignKey("TimeCasaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Futebol_Semanal.Models.Time", "TimeVisitante")
                        .WithMany("PartidasVisitante")
                        .HasForeignKey("TimeVisitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TimeCasa");

                    b.Navigation("TimeVisitante");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Time", b =>
                {
                    b.HasOne("Futebol_Semanal.Models.Usuario", "Usuario")
                        .WithMany("Times")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Jogador", b =>
                {
                    b.Navigation("Estatisticas");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Partida", b =>
                {
                    b.Navigation("Estatisticas");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Time", b =>
                {
                    b.Navigation("Estatisticas");

                    b.Navigation("Jogadores");

                    b.Navigation("PartidasCasa");

                    b.Navigation("PartidasVisitante");
                });

            modelBuilder.Entity("Futebol_Semanal.Models.Usuario", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("Times");
                });
#pragma warning restore 612, 618
        }
    }
}
